version: '3.8'

services:
  # 프론트엔드
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    container_name: hanapath-frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infrastructure/scripts/start-frontend.sh:/start-frontend.sh:ro
      - ./infrastructure/ssl:/etc/nginx/ssl:ro
      - ./infrastructure/certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
      - ai-service
      - realtime-service
    networks:
      - hanapath-network
    restart: unless-stopped
    command: sh /start-frontend.sh

  # 백엔드
  backend:
    build:
      context: ./BE/backend
      dockerfile: Dockerfile
    container_name: hanapath-backend
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MONGODB_URI=${MONGODB_URI}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - AI_SERVICE_URL=http://ai-service:8000
      - REALTIME_SERVICE_URL=http://realtime-service:8001
    depends_on:
      - mysql
      - mongodb
      - redis
      - elasticsearch
    networks:
      - hanapath-network
    restart: unless-stopped
    volumes:
      - backend-logs:/app/logs

  # AI 서비스 - 스미싱 탐지
  ai-service:
    build:
      context: ./BE/model
      dockerfile: Dockerfile
    container_name: hanapath-ai-service
    expose:
      - "8000"
    environment:
      - PYTHON_ENV=production
      - MODEL_PATH=/app/smishingmodel.h5
      - TOKENIZER_PATH=/app/tokenizer.pkl
    networks:
      - hanapath-network
    restart: unless-stopped
    volumes:
      - ai-models:/app/models

  # 실시간 서비스 - 주식 WebSocket
  realtime-service:
    build:
      context: ./realtime
      dockerfile: Dockerfile
    container_name: hanapath-realtime-service
    expose:
      - "8001"
    environment:
      - PYTHON_ENV=production
      - KIS_APP_KEY=${KIS_APP_KEY}
      - KIS_APP_SECRET=${KIS_APP_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - hanapath-network
    restart: unless-stopped

  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: hanapath-mysql
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./infrastructure/mysql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - hanapath-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # MongoDB 데이터베이스
  mongodb:
    image: mongo:7.0
    container_name: hanapath-mongodb
    expose:
      - "27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    volumes:
      - mongodb-data:/data/db
      - ./infrastructure/mongodb/init:/docker-entrypoint-initdb.d:ro
    networks:
      - hanapath-network
    restart: unless-stopped

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: hanapath-redis
    expose:
      - "6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - hanapath-network
    restart: unless-stopped

  # Elasticsearch 검색 엔진
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: hanapath-elasticsearch
    expose:
      - "9200"
      - "9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - hanapath-network
    restart: unless-stopped

networks:
  hanapath-network:
    driver: bridge

volumes:
  mysql-data:
  mongodb-data:
  redis-data:
  elasticsearch-data:
  backend-logs:
  ai-models:
